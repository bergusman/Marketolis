// Generated by Pdef Objective-C generator.

#import "MRUsers.h"
#import "MRUserData.h"
#import "MRUserData.h"
#import "MREditableUserData.h"


#pragma mark MRUsers client
@implementation MRUsersClient

- (NSOperation *) getId:(int64_t )id
        callback:(void (^)(id result, NSError *error))callback {
    PDInvocation *_invocation = [self
            captureInvocation:[self getMethodForName:@"get"]
                         args:@{
                                 @"id" :@(id),
                         }];
    return [self.handler handleInvocation:_invocation callback:callback];
}
- (NSOperation *) updateId:(int64_t )id
        data:(MREditableUserData *)data
        callback:(void (^)(id result, NSError *error))callback {
    PDInvocation *_invocation = [self
            captureInvocation:[self getMethodForName:@"update"]
                         args:@{
                                 @"id" :@(id),
                                 @"data" :data,
                         }];
    return [self.handler handleInvocation:_invocation callback:callback];
}

- (PDMethodDescriptor *)getMethodForName:(NSString *)name {
    return [MRUsersDescriptor() getMethodForName:name];
}
@end


#pragma mark MRUsers descriptor
static dispatch_once_t MRUsersOnce;
static PDInterfaceDescriptor *_MRUsersDescriptor;

PDInterfaceDescriptor *MRUsersDescriptor() {
    dispatch_once(&MRUsersOnce, ^() {
        _MRUsersDescriptor = [[PDInterfaceDescriptor alloc]
                initWithProtocol:@protocol(MRUsers)
                             exc:nil
                         methods:@[
     [[PDMethodDescriptor alloc]
             initWithName:@"get"
           resultSupplier:^PDDescriptor *() { return [MRUserData typeDescriptor]; }
                     args:@[
           [[PDArgumentDescriptor alloc] initWithName:@"id" type: [PDDescriptors int64] post:NO query:NO],
                        ]
                     post:NO],
     [[PDMethodDescriptor alloc]
             initWithName:@"update"
           resultSupplier:^PDDescriptor *() { return [MRUserData typeDescriptor]; }
                     args:@[
           [[PDArgumentDescriptor alloc] initWithName:@"id" type: [PDDescriptors int64] post:NO query:NO],
           [[PDArgumentDescriptor alloc] initWithName:@"data" type: [MREditableUserData typeDescriptor] post:YES query:NO],
                        ]
                     post:YES],
                         ]];
    });
    return _MRUsersDescriptor;
}
