// Generated by Pdef Objective-C generator.

#import "MRSearch.h"
#import "MRSearchResult.h"
#import "MRPageQuery.h"
#import "MRSearchResult.h"
#import "MRPageQuery.h"
#import "MRBoundingBox.h"


#pragma mark MRSearch client
@implementation MRSearchClient

- (NSOperation *) queryQ:(NSString *)q
        page:(MRPageQuery *)page
        callback:(void (^)(id result, NSError *error))callback {
    PDInvocation *_invocation = [self
            captureInvocation:[self getMethodForName:@"query"]
                         args:@{
                                 @"q" :q,
                                 @"page" :page,
                         }];
    return [self.handler handleInvocation:_invocation callback:callback];
}
- (NSOperation *) queryBBoxQ:(NSString *)q
        page:(MRPageQuery *)page
        bbox:(MRBoundingBox *)bbox
        callback:(void (^)(id result, NSError *error))callback {
    PDInvocation *_invocation = [self
            captureInvocation:[self getMethodForName:@"queryBBox"]
                         args:@{
                                 @"q" :q,
                                 @"page" :page,
                                 @"bbox" :bbox,
                         }];
    return [self.handler handleInvocation:_invocation callback:callback];
}

- (PDMethodDescriptor *)getMethodForName:(NSString *)name {
    return [MRSearchDescriptor() getMethodForName:name];
}
@end


#pragma mark MRSearch descriptor
static dispatch_once_t MRSearchOnce;
static PDInterfaceDescriptor *_MRSearchDescriptor;

PDInterfaceDescriptor *MRSearchDescriptor() {
    dispatch_once(&MRSearchOnce, ^() {
        _MRSearchDescriptor = [[PDInterfaceDescriptor alloc]
                initWithProtocol:@protocol(MRSearch)
                             exc:nil
                         methods:@[
     [[PDMethodDescriptor alloc]
             initWithName:@"query"
           resultSupplier:^PDDescriptor *() { return [MRSearchResult typeDescriptor]; }
                     args:@[
           [[PDArgumentDescriptor alloc] initWithName:@"q" type: [PDDescriptors string] post:NO query:YES],
           [[PDArgumentDescriptor alloc] initWithName:@"page" type: [MRPageQuery typeDescriptor] post:NO query:YES],
                        ]
                     post:NO],
     [[PDMethodDescriptor alloc]
             initWithName:@"queryBBox"
           resultSupplier:^PDDescriptor *() { return [MRSearchResult typeDescriptor]; }
                     args:@[
           [[PDArgumentDescriptor alloc] initWithName:@"q" type: [PDDescriptors string] post:NO query:YES],
           [[PDArgumentDescriptor alloc] initWithName:@"page" type: [MRPageQuery typeDescriptor] post:NO query:YES],
           [[PDArgumentDescriptor alloc] initWithName:@"bbox" type: [MRBoundingBox typeDescriptor] post:NO query:YES],
                        ]
                     post:NO],
                         ]];
    });
    return _MRSearchDescriptor;
}
